import matplotlib.pyplot as plt 
import seaborn as sns; sns.set()
import numpy as np 
from sklearn.cluster import KMeans
from sklearn.datasets.samples_generator import make_blobs
from sklearn.datasets import load_digits

X, y_true = make_blobs(n_samples = 400, centers = 4, cluster_std = 0.6, random_state = 0)

plt.scatter(X[:,0], X[:,1], s = 20);
plt.show()

kmeans = KMeans(n_clusters = 4)
kmeans.fit(X)

y_kmeans = kmeans.predict(X)
plt.scatter(X[:,0], X[:,1], c = y_kmeans, s= 20, cmap = 'summer')
centers = kmeans.cluster_centers_
plt.scatter(centers[:,0], centers[:,1], c= 'blue', s=100, alpha= 0.9); 
plt.show()

from sklearn.datasets import load_digits
digits = load_digits() 
digits.data.shape

kmeans = KMeans(n_clusters = 10, random_state = 0)
clusters = kmeans.fit_predict(digits.data)
kmeans.cluster_centers_.shape
fig, ax = plt.subplots(2, 5, figsize = (8,3))
centers = kmeans.cluster_centers_.reshape(10,8,8)
for axi, center in zip(ax.flat, centers): 
  axi.set(xticks= [], yticks= [])
  axi.imshow(center, interpolation='nearest', cmap= plt.cm.binary)
  

from scipy.stats import mode 
labels = np.zeros_like(clusters)
for i in range(10):
  mask = (clusters == i)
  labels[mask] = mode(digits.target[mask])[0]

from sklearn.metrics import accuracy_score
accuracy_score(digits.target, labels)
